fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
library(loo)
L1 <- extract_log_lik(fit_rl1)
L2 <- extract_log_lik(fit_rl2)
loo(L1)
loo(L2)
waic(L1)
waic(L2)
rstan:::rstudio_stanc("_scripts/comparing_models_model1.stan")
rstan:::rstudio_stanc("_scripts/comparing_models_model1.stan")
rstan:::rstudio_stanc("_scripts/comparing_models_model1.stan")
rstan:::rstudio_stanc("_scripts/comparing_models_model2.stan")
library(rstan)
library(loo)
library(loo)
load('_data/rlnc_data.RData')
sz <- dim(rlnc)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rlnc[,,1],
reward=rlnc[,,2])
# =============================================================================
#### Running Stan ####
# =============================================================================
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile1 <- '_scripts/comparing_models_model1.stan'  # simple RL model
modelFile2 <- '_scripts/comparing_models_model2.stan'  # fictitious RL model
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
### model1
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile1,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626
)
cat("Finishing", modelFile1, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
### model2
cat("Estimating", modelFile2, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626
)
cat("Finishing", modelFile2, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile1,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile1, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
### model2
cat("Estimating", modelFile2, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile2, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile2, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile1,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 145015634
)
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile1,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 145015634
)
cat("Finishing", modelFile1, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile2, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile2, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
LL1 <- extract_log_lik(fit_rl1)
LL2 <- extract_log_lik(fit_rl2)
loo(LL1)
loo(LL2)
compare(LL1, LL2)
loo1 <- loo(LL1)
loo2 <- loo(LL2)
compare(loo1, loo2)
print(compare(loo1, loo2), digits = 3)
loo1
loo(
)
loo2
-281 + 389.8
print(fit_rl1)
print(fit_rl2)
loo1
rm(list = ls())
library(rstan)
library(ggplot2)
library(R.matlab)
library(loo)
load('_data/rlnc_data.RData')
sz <- dim(rlnc)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rlnc[,,1],
reward=rlnc[,,2])
# =============================================================================
#### Running Stan ####
# =============================================================================
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile1 <- '_scripts/comparing_models_model1.stan'  # simple RL model
modelFile2 <- '_scripts/comparing_models_model2.stan'  # fictitious RL model
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
### model1
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile1,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 145015634
)
cat("Finishing", modelFile1, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
### model2
cat("Estimating", modelFile2, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile2, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
LL1 <- extract_log_lik(fit_rl1)
LL2 <- extract_log_lik(fit_rl2)
loo1 <- loo(LL1)
loo2 <- loo(LL2)
loo1
loo2
rstan:::rstudio_stanc("_scripts/comparing_models_model1_ppc.stan")
rstan:::rstudio_stanc("_scripts/comparing_models_model1_ppc.stan")
rm(list = ls())
library(rstan)
library(ggplot2)
library(R.matlab)
library(loo)
load('_data/rlnc_data.RData')
sz <- dim(rlnc)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rlnc[,,1],
reward=rlnc[,,2])
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile3 <- '_scripts/comparing_models_model1_ppc.stan'  # simple RL model, with ppc, S-by-T loglik
nIter     <- 10
nChains   <- 1
nWarmup   <- 0
nThin     <- 1
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile3,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 145015634
)
cat("Finishing", modelFile1, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
rstan:::rstudio_stanc("_scripts/comparing_models_model2_ppc.stan")
rstan:::rstudio_stanc("_scripts/comparing_models_model2_ppc.stan")
f_rl = readRDS('_outputs/fit_RL_ppc.RData')
f_rlfic = readRDS('_outputs/fit_RLfict_ppc.RData')
load('_data/rlnc_data.RData')
sz <- dim(rlnc)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rlnc[,,1],
reward=rlnc[,,2])
plot(1:100, colMeans(dataList$choice == 1),type='b')
rlnc
dim(rlnc)
y_mean = colMeans(dataList$choice == 1)
y_pred_rl = extract(f_rl, pars='y_pred')$y_pred
y_pred_rlfic = extract(f_rlfic, pars='y_pred')$y_pred
y_pred_rl_mean_mcmc = apply(y_pred_rl==1, c(1,3), mean)
y_pred_rl_mean = colMeans(y_pred_rl_mean_mcmc)
y_pred_rl_mean_HDI = apply(y_pred_rl_mean_mcmc, 2, HDIofMCMC)
source('_scripts/HDIofMCMC.R')
y_pred_rl_mean_HDI = apply(y_pred_rl_mean_mcmc, 2, HDIofMCMC)
y_pred_rlfic_mean_mcmc = apply(y_pred_rlfic==1, c(1,3), mean)
y_pred_rlfic_mean = colMeans(y_pred_rlfic_mean_mcmc)
y_pred_rlfic_mean_HDI = apply(y_pred_rlfic_mean_mcmc, 2, HDIofMCMC)
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
df = data.frame(Trial = 1:100,
Data  = y_mean,
RL = y_pred_rl_mean,
RL_HDI_l = y_pred_rl_mean_HDI[1,],
RL_HDI_h = y_pred_rl_mean_HDI[2,],
RLfic = y_pred_rlfic_mean,
RLfic_HDI_l = y_pred_rlfic_mean_HDI[1,],
RLfic_HDI_h = y_pred_rlfic_mean_HDI[2,])
g1 = ggplot(df, aes(Trial,Data))
g1 = g1 + geom_line(size = 1.5, aes(color= 'Data')) + geom_point(size = 2, shape = 21, fill='skyblue3',color= 'skyblue3')
g1 = g1 + geom_ribbon(aes(ymin=RL_HDI_l, ymax=RL_HDI_h, fill='RL'), linetype=2, alpha=0.3)
g1 = g1 + geom_ribbon(aes(ymin=RLfic_HDI_l, ymax=RLfic_HDI_h, fill='RLfic'), linetype=2, alpha=0.3)
g1 = g1 + myconfig + scale_fill_manual(name = '',  values=c("RL" = "skyblue3", "RLfic" = "red")) +
scale_color_manual(name = '',  values=c("Data" = "skyblue"))  +
labs(y = 'Choosing correct (%)')
g1 = g1 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g1
g1 = ggplot(df, aes(Trial,Data))
g1 = g1 + geom_line(size = 1.5, aes(color= 'Data')) + geom_point(size = 2, shape = 21, fill='skyblue3',color= 'skyblue3')
g1 = g1 + geom_ribbon(aes(ymin=RL_HDI_l, ymax=RL_HDI_h, fill='RL'), linetype=2, alpha=0.3)
g1 = g1 + geom_ribbon(aes(ymin=RLfic_HDI_l, ymax=RLfic_HDI_h, fill='RLfic'), linetype=2, alpha=0.3)
g1 = g1 + myconfig + scale_fill_manual(name = '',  values=c("RL" = "skyblue3", "RLfic" = "mediumpurple3")) +
scale_color_manual(name = '',  values=c("Data" = "skyblue"))  +
labs(y = 'Choosing correct (%)')
g1 = g1 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g1
g1 = ggplot(df, aes(Trial,Data))
g1 = g1 + geom_line(size = 1.5, aes(color= 'Data')) + geom_point(size = 2, shape = 21, fill='skyblue3',color= 'skyblue3')
g1 = g1 + geom_ribbon(aes(ymin=RL_HDI_l, ymax=RL_HDI_h, fill='RL'), linetype=2, alpha=0.3)
g1 = g1 + geom_ribbon(aes(ymin=RLfic_HDI_l, ymax=RLfic_HDI_h, fill='RLfic'), linetype=2, alpha=0.3)
g1 = g1 + myconfig + scale_fill_manual(name = '',  values=c("RL" = "mediumseagreen", "RLfic" = "mediumpurple3")) +
scale_color_manual(name = '',  values=c("Data" = "skyblue"))  +
labs(y = 'Choosing correct (%)')
g1 = g1 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g1
g1 = ggplot(df, aes(Trial,Data))
g1 = g1 + geom_line(size = 1.5, aes(color= 'Data')) + geom_point(size = 2, shape = 21, fill='skyblue3',color= 'skyblue3')
g1 = g1 + geom_ribbon(aes(ymin=RL_HDI_l, ymax=RL_HDI_h, fill='RL'), linetype=2, alpha=0.3)
g1 = g1 + geom_ribbon(aes(ymin=RLfic_HDI_l, ymax=RLfic_HDI_h, fill='RLfic'), linetype=2, alpha=0.3)
g1 = g1 + myconfig + scale_fill_manual(name = '',  values=c("RL" = "skyblue3", "RLfic" = "indianred3")) +
scale_color_manual(name = '',  values=c("Data" = "skyblue"))  +
labs(y = 'Choosing correct (%)')
g1 = g1 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g1
ggsave(plot = g1, "_plots/compare_choice_seq_ppc.png", width = 8, height = 4, type = "cairo-png", units = "in")
tt_y = mean(df$Data)
df2 = data.frame(RL = rowMeans(y_pred_rl_mean_mcmc),
RLfic = rowMeans(y_pred_rlfic_mean_mcmc)) # overall mean, 4000 mcmc samples
dat <- data.frame(xx = c(runif(100,20,50),runif(100,40,80),runif(100,0,30)),yy = rep(letters[1:3],each = 100))
dat
rep(c('RL','RLfic'),each=2)
rep(c('RL','RLfic'),each=3)
rep(c('RL','RLfic'),each=4)
df2 = data.frame(xx = c(rowMeans(y_pred_rl_mean_mcmc),rowMeans(y_pred_rlfic_mean_mcmc)) ,
model = rep(c('RL','RLfic'),each=8000) ) # overall mean, 4000 mcmc samples
dim(df2)
df2 = data.frame(xx = c(rowMeans(y_pred_rl_mean_mcmc),rowMeans(y_pred_rlfic_mean_mcmc)) ,
model = rep(c('RL','RLfic'),each=4000) ) # overall mean, 4000 mcmc samples
dim(df2)
g2 = ggplot(data=df2, aes(xx)) +
geom_histogram(data=subset(df2, model == 'RL'),fill = "skyblue3", alpha = 0.5, binwidth =.005) +
geom_histogram(data=subset(df2, model == 'RLfic'),fill = "indianred3", alpha = 0.5, binwidth =.005)
g2
g2 = g2 + geom_vline(xintercept=tt_y, color = 'skyblue3',size=1.5)
g2 = g2 + labs(x = 'Choosing correct (%)', y = 'Frequency')
g2 = g2 + myconfig# + scale_x_continuous(breaks=c(tt_y), labels=c("Event1"))
g2 = g2 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g2
g2 = ggplot(data=df2, aes(xx)) +
geom_histogram(data=subset(df2, model == 'RL'),fill = "skyblue3", alpha = 0.5, binwidth =.005) +
geom_histogram(data=subset(df2, model == 'RLfic'),fill = "indianred3", alpha = 0.5, binwidth =.005)
g2 = g2 + geom_vline(xintercept=tt_y, color = 'skyblue4',size=1.5)
g2 = g2 + labs(x = 'Choosing correct (%)', y = 'Frequency')
g2 = g2 + myconfig# + scale_x_continuous(breaks=c(tt_y), labels=c("Event1"))
g2 = g2 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g2
ggsave(plot = g2, "_plots/choice_mean_ppc.png", width = 6, height = 4, type = "cairo-png", units = "in")
ggsave(plot = g2, "_plots/compare_choice_mean_ppc.png", width = 6, height = 4, type = "cairo-png", units = "in")
df2 = data.frame(xx = c(rowMeans(y_pred_rl_mean_mcmc),rowMeans(y_pred_rlfic_mean_mcmc)) ,
model = rep(c('RL','RLfic'),each=4000) ) # overall mean, 4000 mcmc samples
g2 = ggplot(data=df2, aes(xx)) +
geom_histogram(data=subset(df2, model == 'RL'),fill = "skyblue3", alpha = 0.5, binwidth =.005) +
geom_histogram(data=subset(df2, model == 'RLfic'),fill = "indianred3", alpha = 0.5, binwidth =.005)
g2 = g2 + geom_vline(xintercept=tt_y, color = 'skyblue3',size=1.5)
g2 = g2 + labs(x = 'Choosing correct (%)', y = 'Frequency')
g2 = g2 + myconfig# + scale_x_continuous(breaks=c(tt_y), labels=c("Event1"))
g2 = g2 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g2
ggsave(plot = g2, "_plots/compare_choice_mean_ppc.png", width = 6, height = 4, type = "cairo-png", units = "in")
tt_y = mean(df$Data)
df2 = data.frame(xx = c(rowMeans(y_pred_rl_mean_mcmc),rowMeans(y_pred_rlfic_mean_mcmc)) ,
model = rep(c('RL','RLfic'),each=4000) ) # overall mean, 4000 mcmc samples
g2 = ggplot(data=df2, aes(xx)) +
geom_histogram(data=subset(df2, model == 'RL'),fill = "skyblue3", alpha = 0.5, binwidth =.005) +
geom_histogram(data=subset(df2, model == 'RLfic'),fill = "indianred3", alpha = 0.5, binwidth =.005)
g2 = g2 + geom_vline(xintercept=tt_y, color = 'skyblue',size=1.5)
g2 = g2 + labs(x = 'Choosing correct (%)', y = 'Frequency')
g2 = g2 + myconfig# + scale_x_continuous(breaks=c(tt_y), labels=c("Event1"))
g2 = g2 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g2
ggsave(plot = g2, "_plots/compare_choice_mean_ppc.png", width = 6, height = 4, type = "cairo-png", units = "in")
g2 = ggplot(data=df2, aes(xx)) +
geom_histogram(data=subset(df2, model == 'RL'),fill = "skyblue3", alpha = 0.5, binwidth =.005) +
geom_histogram(data=subset(df2, model == 'RLfic'),fill = "indianred3", alpha = 0.5, binwidth =.005)
g2 = g2 + geom_vline(xintercept=tt_y, color = 'skyblue2',size=1.5)
g2 = g2 + labs(x = 'Choosing correct (%)', y = 'Frequency')
g2 = g2 + myconfig# + scale_x_continuous(breaks=c(tt_y), labels=c("Event1"))
g2 = g2 + theme(axis.text   = element_text(size=22),
axis.title  = element_text(size=25),
legend.text = element_text(size=25))
g2
ggsave(plot = g2, "_plots/compare_choice_mean_ppc.png", width = 6, height = 4, type = "cairo-png", units = "in")
rm(list = ls())
library(rstan)
library(ggplot2)
library(R.matlab)
library(loo)
load('_data/rlnc_data.RData')
sz <- dim(rlnc)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rlnc[,,1],
reward=rlnc[,,2])
head(rlnc)
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rlnc[,,1],
reward=rlnc[,,2])
dataList$choice
dataList$reward
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile1 <- '_scripts/comparing_models_model1.stan'  # simple RL model
modelFile2 <- '_scripts/comparing_models_model2.stan'  # fictitious RL model
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
cat("Estimating", modelFile1, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl1 <- stan(modelFile1,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 145015634
)
cat("Finishing", modelFile1, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile2, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl2 <- stan(modelFile2,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile2, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
LL1 <- extract_log_lik(fit_rl1)
LL2 <- extract_log_lik(fit_rl2)
loo1 <- loo(LL1)
loo2 <- loo(LL2)
loo1
loo2
? loo
relative_eff(exp(LL1))
relative_eff(exp(LL1),chain_id = 1:4)
dim(exp(LL1))
relative_eff(exp(LL1),chain_id = rep(1:2, each = 1000))
relative_eff(exp(LL1),chain_id = rep(1:4, each = 1000))
r = relative_eff(exp(LL1),chain_id = rep(1:4, each = 1000))
loo1 <- loo(LL1,r_eff = r)
loo1
loo(LL1)
loo(LL2, r_eff = relative_eff(exp(LL2),chain_id = rep(1:4, each = 1000)))
loo(LL2)
