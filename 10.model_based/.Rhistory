rstan:::rstudio_stanc("_scripts/reinforcement_learning_model_based.stan")
rstan:::rstudio_stanc("_scripts/reinforcement_learning_model_based.stan")
rstan:::rstudio_stanc("_scripts/reinforcement_learning_model_based.stan")
rm(list=ls(all=TRUE))
library(rstan)
library(ggplot2)
load('_data/rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rl_mp[,,1],
reward=rl_mp[,,2])
# =============================================================================
#### Running Stan ####
# =============================================================================
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile <- '_scripts/reinforcement_learning_model_based.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154626
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
saveRDS(fit_rl, file='_outputs/fit_rl.RData')
rm(list=ls(all=TRUE))
fit_rl <- readRDS(fit_rl, file='_outputs/fit_rl.RData')
fit_rl <- readRDS('_outputs/fit_rl.RData')
print(fit_rl, pars = c('lr_mu', 'tau_mu', 'lr', 'tau', 'log_lik'))
stan_trace(fit_rl, c('lr_mu'))
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154185
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
library(rstan)
library(ggplot2)
load('_data/rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rl_mp[,,1],
reward=rl_mp[,,2])
# =============================================================================
#### Running Stan ####
# =============================================================================
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile <- '_scripts/reinforcement_learning_model_based.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154185
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
print(fit_rl, pars = c('lr_mu', 'tau_mu', 'lr', 'tau', 'log_lik'))
stan_trace(fit_rl, c('lr_mu'))
saveRDS(fit_rl, file='_outputs/fit_rl.RData')
dec_var <- get_posterior_mean(fit_rl, pars=c('vc', 'pe', 'v'))[,5]
vc <- dec_var[1:(nSubjects*nTrials)]
pe <- dec_var[(1:(nSubjects*nTrials)) + nSubjects*nTrials]
vc <- matrix(vc, nrow = nSubjects, ncol = nTrials, byrow = T)
pe <- matrix(pe, nrow = nSubjects, ncol = nTrials, byrow = T)
#### take one participants as an example, subj = 1
vc_sub1 <- vc[1,]
pe_sub1 <- pe[1,]
ch_sub1 <- dataList$choice[1,]
rw_sub1 <- dataList$reward[1,]
df_sub1 <- data.frame(trial  = 1:nTrials,
choice = ch_sub1,
reward = rw_sub1,
value  = vc_sub1,
pe     = pe_sub1)
cor.test(df_sub1$reward, df_sub1$pe)
cor.test(df_sub1$value, df_sub1$pe)
cor.test(df_sub1$value, df_sub1$reward)
dec_var <- get_posterior_mean(fit_rl, pars=c('vc', 'pe', 'v'))[,5]
vc <- dec_var[1:(nSubjects*nTrials)]
pe <- dec_var[(1:(nSubjects*nTrials)) + nSubjects*nTrials]
vc <- matrix(vc, nrow = nSubjects, ncol = nTrials, byrow = T)
pe <- matrix(pe, nrow = nSubjects, ncol = nTrials, byrow = T)
((nSubjects*nTrials)*2+1)
length(dec_var2)
length(dec_var)
101*2*10
((nSubjects*nTrials)*2+1):length(dec_var)
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v
?array
v2 <- matrix(v, nrow = 2, ncol = length(v)/2)
head(v)
head(v2)
head(v)
v2[,1:6]
v[1:12]
v2[,1:6]
v[1:12]
v2[,1:6]
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v <- matrix(v, nrow = 2, ncol = length(v)/2)
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v <- matrix(v, nrow = 2, ncol = length(v)/2)
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials, byrow = T)
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v <- matrix(v, nrow = 2, ncol = length(v)/2)
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2
v[2,1:10]
v_op2[1,1:10]
v[2,102:110]
v_op2[2,1:9]
v_op2 <- v_op2[1:nSubjects, 1:nTrials]
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2 <- v_op2[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op2_sub1 <- v_op2[1,]
df2_sub1 <- data.frame(trial  = 1:nTrials,
value2 = v_op2_sub1)
g3 <- ggplot(df2_sub1, aes(x=trial, y=value2))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 2')
g3
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
g3 <- ggplot(df2_sub1, aes(x=trial, y=value2))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 2')
g3
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v <- matrix(v, nrow = 2, ncol = length(v)/2)
v_op1 <- v[2,]
v_op1 <- matrix(v_op1, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op1 <- v_op1[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op1_sub1 <- v_op1[1,]
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2 <- v_op2[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op2_sub1 <- v_op2[1,]
df2_sub1 <- data.frame(trial  = 1:nTrials,
value1 = v_op1_sub1,
value2 = v_op2_sub1)
g3 <- ggplot(df2_sub1, aes(x=trial, y=value1))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 1')
g3
v_op1 <- v[2,]
v_op1 <- matrix(v_op1, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op1 <- v_op1[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op1_sub1 <- v_op1[1,]
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2 <- v_op2[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op2_sub1 <- v_op2[1,]
graphics.off()
g3 <- ggplot(df2_sub1, aes(x=trial, y=value2))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 2')
g3
g3 <- ggplot(df2_sub1, aes(x=trial, y=value1))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 1')
g3
value1
v_op1_sub1
v_op2_sub1
v_op1 <- v[1,]
v_op1 <- matrix(v_op1, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op1 <- v_op1[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op1_sub1 <- v_op1[1,]
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2 <- v_op2[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op2_sub1 <- v_op2[1,]
df2_sub1 <- data.frame(trial  = 1:nTrials,
value1 = v_op1_sub1,
value2 = v_op2_sub1)
g3 <- ggplot(df2_sub1, aes(x=trial, y=value2))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 2')
g3
g3 <- ggplot(df2_sub1, aes(x=trial, y=value1))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 1')
g3
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v <- matrix(v, nrow = 2, ncol = length(v)/2) # 1st row for option1, 2nd row for option2
v_op1 <- v[1,]
v_op1 <- matrix(v_op1, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op1 <- v_op1[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op1_sub1 <- v_op1[1,]
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2 <- v_op2[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op2_sub1 <- v_op2[1,]
df2_sub1 <- data.frame(trial  = 1:nTrials,
value1 = v_op1_sub1,
value2 = v_op2_sub1)
g3 <- ggplot(df2_sub1, aes(x=trial, y=value1))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 1')
g3
g4 <- ggplot(df2_sub1, aes(x=trial, y=value2))
g4 <- g4 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g4 <- g4 + myconfig + labs(x = 'Trial', y = 'value of option 2')
g4
ggsave(plot = g3, "_plots/sub1_value_opt1.png", width = 10, height = 4, type = "cairo-png", units = "in")
ggsave(plot = g4, "_plots/sub1_value_opt2.png", width = 10, height = 4, type = "cairo-png", units = "in")
fit_rl <- readRDS('_outputs/fit_rl.RData')
library(rstan)
fit_rl@model_pars
q()
fit_rl <- readRDS('_outputs/fit_rl.RData')
fit_rl <- readRDS('_outputs/fit_rl.RData')
print(fit_rl, pars = c('lr_mu', 'tau_mu', 'lr', 'tau', 'log_lik'))
dec_var <- get_posterior_mean(fit_rl, pars=c('vc', 'pe', 'v'))[,5]
library(rstan)
dec_var <- get_posterior_mean(fit_rl, pars=c('vc', 'pe', 'v'))[,5]
vc <- dec_var[1:(nSubjects*nTrials)]
pe <- dec_var[(1:(nSubjects*nTrials)) + nSubjects*nTrials]
vc <- matrix(vc, nrow = nSubjects, ncol = nTrials, byrow = T)
pe <- matrix(pe, nrow = nSubjects, ncol = nTrials, byrow = T)
load('_data/rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rl_mp[,,1],
reward=rl_mp[,,2])
dec_var <- get_posterior_mean(fit_rl, pars=c('vc', 'pe', 'v'))[,5]
vc <- dec_var[1:(nSubjects*nTrials)]
pe <- dec_var[(1:(nSubjects*nTrials)) + nSubjects*nTrials]
vc <- matrix(vc, nrow = nSubjects, ncol = nTrials, byrow = T)
pe <- matrix(pe, nrow = nSubjects, ncol = nTrials, byrow = T)
dim(dataList$reward)
otcm    <- dataList$reward[1,]
install.packages('corrr')
library(corrr)
?rplot
otcm_sub1 <- dataList$reward[1,]
a = cbind(vc_sub1, pe_sub1, otcm_sub1    )
vc_sub1 <- vc[1,]
pe_sub1 <- pe[1,]
ch_sub1 <- dataList$choice[1,]
rw_sub1 <- dataList$reward[1,]
otcm_sub1 <- dataList$reward[1,]
df_sub1 <- data.frame(trial  = 1:nTrials,
choice = ch_sub1,
reward = rw_sub1,
value  = vc_sub1,
pe     = pe_sub1)
a = cbind(vc_sub1, pe_sub1, otcm_sub1    )
a
c = cor(a)
c
library(corrplot)
correlate(c)
rplot(correlate(c))
a = cbind( pe_sub1, vc_sub1, otcm_sub1    )
rplot(correlate(c))
c = cor(a)
rplot(correlate(c))
c
correlate(c)
correlate(a)
rplot(correlate(a))
corrplot(c)
?rplot
pairs(a)
?rplot
rplot(correlate(a), shape=15)
rplot(correlate(a), shape=15, colors = c('indianred2','white','chartreuse3'))
rplot(correlate(a), shape=15, colors = c('indianred2','white','chartreuse3'), print_cor = T)
rplot(correlate(a), shape=15, colors = c('indianred2','white','chartreuse3'))
(correlate(a))
rplot(correlate(a), shape=15, colors = c('indianred2','white','chartreuse3'),upper=F)
rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'))
r = rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'))
r
rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'), sz=1)
rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'), cex.lab-2)
rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'), cex.lab=2)
rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'), sz=2)
class(r)
r
r + theme(axis.text   = element_text(size=20))
r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=20))
r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=15))
r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=10))
r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=12))
r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=15))
df_sub1 <- data.frame(trial  = 1:nTrials,
choice = ch_sub1,
reward = rw_sub1,
value  = vc_sub1,
pe     = pe_sub1)
df_sub1 <- data.frame(trial  = 1:nTrials,
choice = ch_sub1,
reward = rw_sub1,
value  = vc_sub1,
pe     = pe_sub1)
library(ggplot2)
myconfig <- theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank() )
g1 <- ggplot(df_sub1, aes(x=trial, y=value))
g1 <- g1 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g1 <- g1 + myconfig + labs(x = 'Trial', y = 'Chosen Value')
g1
g2 <- ggplot(df_sub1, aes(x=trial, y=pe))
g2 <- g2 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g2 <- g2 + myconfig + labs(x = 'Trial', y = 'Prediction Error')
g2
a = cbind( df_sub1$pe, df_sub1$reward, df_sub1$value)
r = corrr::rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'))
r
df_sub1
a = df_sub1[, c('pe', 'reward', 'value')]
head(a)
r = corrr::rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'))
r
r = r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=15))
r
colnames(a) = c('PE', 'Reward', 'Value')
r = corrr::rplot(shave(correlate(a)), shape=15, colors = c('indianred2','white','chartreuse3'))
r = r + theme(axis.text   = element_text(size=20), legend.text = element_text(size=15))
r
ggsave(plot = r, "_plots/PE_V_R_corr_mat.png", width = 6, height = 4, type = "cairo-png", units = "in")
ggsave(plot = r, "_plots/PE_V_R_corr_mat.png", width = 5, height = 3, type = "cairo-png", units = "in")
v <- dec_var[((nSubjects*nTrials)*2+1):length(dec_var)]
v <- matrix(v, nrow = 2, ncol = length(v)/2) # 1st row for option1, 2nd row for option2
v_op1 <- v[1,]
v_op1 <- matrix(v_op1, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op1 <- v_op1[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op1_sub1 <- v_op1[1,]
v_op2 <- v[2,]
v_op2 <- matrix(v_op2, nrow = nSubjects, ncol = nTrials+1, byrow = T)
v_op2 <- v_op2[1:nSubjects, 1:nTrials]  # remove the 101th trial
v_op2_sub1 <- v_op2[1,]
df2_sub1 <- data.frame(trial  = 1:nTrials,
value1 = v_op1_sub1,
value2 = v_op2_sub1)
g3 <- ggplot(df2_sub1, aes(x=trial, y=value1))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 1')
g3
g4 <- ggplot(df2_sub1, aes(x=trial, y=value2))
g4 <- g4 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g4 <- g4 + myconfig + labs(x = 'Trial', y = 'value of option 2')
g4
g3 <- ggplot(df2_sub1, aes(x=trial, y=value1))
g3 <- g3 + geom_line(size = 2, color = 'black') + geom_point(size = 3, shape = 21, fill='black')
g3 <- g3 + myconfig + labs(x = 'Trial', y = 'value of option 1')
g3
